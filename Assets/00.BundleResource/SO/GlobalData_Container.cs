//------------------------------------------------------------------------------
// Author : Strix
// Github : https://github.com/KorStrix/SheetParser
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Linq;
using UnityEngine;



public class GlobalData_Container : UnityEngine.ScriptableObject
{
    
    private static GlobalData_Container _instance;
    
    public List<GlobalData> listData;
    
    public Dictionary<EGlobalKey_float, float> mapData_Type_Is_float;
    
    public Dictionary<EGlobalKey_int, int> mapData_Type_Is_int;
    
    public static GlobalData_Container instance
    {
        get
        {
               return _instance;
        }
    }
    
    public static void DoInit(GlobalData_Container pSingletonInstance, bool bIsUpdateChildAsset)
    {
          _instance = pSingletonInstance;
#if UNITY_EDITOR
           if(bIsUpdateChildAsset)
           {
              _instance.listData.Clear();
               Object[] arrObject = UnityEditor.AssetDatabase.LoadAllAssetRepresentationsAtPath(UnityEditor.AssetDatabase.GetAssetPath(_instance));
               for (int i = 0; i < arrObject.Length; i++)
                  _instance.listData.Add((GlobalData)arrObject[i]);
               if(Application.isPlaying == false)
               {
                   UnityEditor.EditorUtility.SetDirty(_instance);
                   UnityEditor.SceneManagement.EditorSceneManager.MarkSceneDirty(UnityEditor.SceneManagement.EditorSceneManager.GetActiveScene());
               }
           }
#endif
        _instance.Init_mapData_Type_Is_float();
        _instance.Init_mapData_Type_Is_int();
    }
    
    private void Init_mapData_Type_Is_float()
    {
        var arrLocal = listData.Where(x => x.strType == "float");
        this.mapData_Type_Is_float = arrLocal.ToDictionary(p => p.eGlobalKey_float, p => float.Parse(p.strValue));
    }
    
    private void Init_mapData_Type_Is_int()
    {
        var arrLocal = listData.Where(x => x.strType == "int");
        this.mapData_Type_Is_int = arrLocal.ToDictionary(p => p.eGlobalKey_int, p => int.Parse(p.strValue));
    }
}

public enum EGlobalKey_float
{
    
    최대_MP_기본값,
    
    최대_MP_값_증가_비율,
    
    웨이브_갱신_주기,
    
    불렛_기본_발사_속도 ,
    
    적_리스폰_주기,
}

public enum EGlobalKey_int
{
    
    스테이지당_최대_웨이브_수,
    
    스킬_최대_레벨,
}

#region 
static
public class GlobalData_ContainerHelper
{
    
    public static float Getfloat(this EGlobalKey_float eKey, System.Action<string> OnError = null)
    {
          System.Single pData;
          if(GlobalData_Container.instance.mapData_Type_Is_float.TryGetValue(eKey, out pData) == false)
          {
              if(OnError != null)
                  OnError(nameof(GlobalData_Container) + "- Not Found Data // Key : " + eKey);
          }
          return pData;
    }
    
    public static int Getint(this EGlobalKey_int eKey, System.Action<string> OnError = null)
    {
          System.Int32 pData;
          if(GlobalData_Container.instance.mapData_Type_Is_int.TryGetValue(eKey, out pData) == false)
          {
              if(OnError != null)
                  OnError(nameof(GlobalData_Container) + "- Not Found Data // Key : " + eKey);
          }
          return pData;
    }
}
#endregion
